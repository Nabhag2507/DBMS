USE CSE_3A_261;

CREATE TABLE STU_INFO(
	ROLLNO INT,
	NAME VARCHAR(50),
	BRANCH VARCHAR(50),
);

INSERT INTO STU_INFO VALUES
	(101,'RAJU','CE'),
	(102,'AMIT','CE'),
	(103,'SANJAY','ME'),
	(104,'NEHA','EC'),
	(105,'MEERA','EE'),
	(106,'MAHESH','ME');

CREATE TABLE RESULT(
	ROLLNO INT,
	SPI DECIMAL(2,1)
);

INSERT INTO RESULT VALUES
	(101,8.8),
	(102,9.2),
	(103,7.6),
	(104,8.2),
	(105,7.0),
	(107,8.9);

CREATE TABLE EMPLOYEE_MASTER(
	EMPNO VARCHAR(5),
	NAME VARCHAR(50),
	MANAGERNO VARCHAR(5)
);

INSERT INTO EMPLOYEE_MASTER VALUES
	('E01','TARUN',NULL),
	('E02','ROHAN','E02'),
	('E03','PRIYA','E01'),
	('E04','MILAN','E03'),
	('E05','JAY','E01'),
	('E06','ANJANA','E04')

--Part – A:

--1. Combine information from student and result table using cross join or Cartesian product.
SELECT * 
FROM STU_INFO CROSS JOIN RESULT

--2. Perform inner join on Student and Result tables.
SELECT * 
FROM STU_INFO INNER JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO;

--3. Perform the left outer join on Student and Result tables.
SELECT * 
FROM STU_INFO LEFT OUTER JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO;

--4. Perform the right outer join on Student and Result tables.
SELECT * 
FROM STU_INFO RIGHT OUTER JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO;

--5. Perform the full outer join on Student and Result tables.
SELECT * 
FROM STU_INFO FULL OUTER JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO;

--6. Display Rno, Name, Branch and SPI of all students.
SELECT STU_INFO.ROLLNO,STU_INFO.NAME,BRANCH,SPI 
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO;

--7. Display Rno, Name, Branch and SPI of CE branch’s student only.
SELECT STU_INFO.ROLLNO,STU_INFO.NAME,BRANCH,SPI 
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
WHERE BRANCH = 'CE';

--8. Display Rno, Name, Branch and SPI of other than EC branch’s student only.
SELECT STU_INFO.ROLLNO,STU_INFO.NAME,BRANCH,SPI 
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
WHERE NOT BRANCH = 'EC';

--9. Display average result of each branch.
SELECT AVG(SPI) AS AVRAGE_SPI,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
GROUP BY BRANCH;

--10. Display average result of CE and ME branch.
SELECT AVG(SPI) AS AVRAGE_SPI,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
WHERE BRANCH IN ('CE','ME')
GROUP BY BRANCH;

--11. Display Maximum and Minimum SPI of each branch.
SELECT MAX(SPI) AS MAX_SPI,MIN(SPI) AS MIN_SPI,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
GROUP BY BRANCH;

--12. Display branch wise student’s count in descending order.
SELECT COUNT(STU_INFO.ROLLNO) AS TOTAL,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
GROUP BY BRANCH
ORDER BY TOTAL DESC;

--Part – B:

--1. Display average result of each branch and sort them in ascending order by SPI.
SELECT avg(SPI) AS avg_result,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
GROUP BY BRANCH
ORDER BY avg_result;

--2. Display highest SPI from each branch and sort them in descending order.
SELECT MAX(SPI) AS HIGHEST,BRANCH
FROM STU_INFO JOIN RESULT
ON STU_INFO.ROLLNO = RESULT.ROLLNO
GROUP BY BRANCH
ORDER BY HIGHEST DESC;

--Part – C:

--1. Retrieve the names of employee along with their manager’s name from the Employee table.
SELECT E1.NAME , E2.NAME
FROM EMPLOYEE_MASTER E1 JOIN EMPLOYEE_MASTER E2
ON E1.EMPNO = E2.MANAGERNO;
